name: 'Testing setup terraform'

on:
  push:
    branches:
    - main

defaults:
  run:
    shell: bash

jobs:
  terraform-run-local:
    name: 'Wrapper'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    defaults:
      run:
        shell: bash
        working-directory: ./.github/workflows/data/local
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@adb3460e141a986b1b5528ef63d07fbc3f369423
      with:
        terraform_wrapper: true

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Output all
      run: 
        terraform output -json

    - name: Output the pet name
      run: |
        terraform output -json | jq '.pet_name'
        terraform output -json | jq '.pet_name.value'
        terraform output -json | jq '.pet_name.type'


  terraform-run-local-no-wrapper:
    name: 'No wrapper'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    defaults:
      run:
        shell: bash
        working-directory: ./.github/workflows/data/local
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@adb3460e141a986b1b5528ef63d07fbc3f369423
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Output all
      run: 
        terraform output -json

    - name: Output the pet name
      run: |
        terraform output -json | jq '.pet_name'
        terraform output -json | jq '.pet_name.value'
        terraform output -json | jq '.pet_name.type'
